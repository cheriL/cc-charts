---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app-name: prometheus-operator
  name: prometheus-operator
  namespace: {{ .Values.operator.namespace }}
spec:
  replicas:  {{ .Values.operator.replicas }}
  selector:
    matchLabels:
      app-name: prometheus-operator
  template:
    metadata:
      labels:
        app-name: prometheus-operator
    spec:
      {{- if .Values.operator.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.operator.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.operator.tolerations }}
      tolerations:
{{ toYaml .Values.operator.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.operator.affinity }}
      affinity:
{{ toYaml .Values.operator.affinity | indent 8 }}
      {{- end }}
      {{- with .Values.operator.pullSecrets | default .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - args:
        - --kubelet-service=kube-system/kubelet
        - --prometheus-config-reloader={{ .Values.operator.reloader }}
        image: {{ .Values.operator.image }}
        name: prometheus-operator
        ports:
        - containerPort: 8080
          name: http
        {{- if .Values.mysql.resources }}
        resources:
{{ toYaml .Values.mysql.resources | indent 10 }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: prometheus-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app-name: prometheus-operator
  name: prometheus-operator
  namespace: {{ .Values.operator.namespace }}
spec:
  clusterIP: None
  ports:
  - name: http
    port: 8080
    targetPort: http
  selector:
    app-name: prometheus-operator
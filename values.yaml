global:
  # -- Global Docker image registry.
  imageRegistry: "10.20.2.3:5000/cube-studio"
  # -- Global Docker registry secret names as an array.
  imagePullSecrets: []
  # -- Global storageClass for Persistent Volume(s).
  storageClass: "local-path"
  # istio ?
  host: "*"

mysql:
  # enable: true
  name: mysql
  namespace: infra
   # -- Image repository
  image: mysql
  # -- Image tag
  tag: 8.0.32
  nodeSelector: {}
  tolerations: {}
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: mysql
    #           operator: In
    #           values:
    #           - "true"
  resources: {}
  initContainer:
    - name: remove-lost-found
      image: busybox:1.36.0
      imagePullPolicy: IfNotPresent
      command: ["rm", "-rf", "/var/lib/mysql/lost+found"]
      volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
  # service port
  port: 3306
  persistence:
    enabled: true
    storageClass: ""
    size: 1Gi

redis:
  namespace: infra
  image: redis
  tag: 6.2.12
  nodeSelector: {} #redis: 'true'
  tolerations: {}
  affinity: {}
  resources:
    requests:
      cpu: 20m
      memory: 128Mi #512
  initContainer: {}
  port: 6379

cube:
  namespace: infra
  backend:
    name: kubeflow-dashboard
    replicas: 1
    image: ccr.ccs.tencentyun.com/cube-studio/kubeflow-dashboard
    tag: 2024.03.01
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    resources: {}
    livenessProbe: {}
    readinessProbe: {}
  frontend:
    name: kubeflow-dashboard-frontend
    replicas: 1
    image: ccr.ccs.tencentyun.com/cube-studio/kubeflow-dashboard-frontend
    tag: 2024.03.01
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    resources: {}
    livenessProbe: {}
    readinessProbe: {}
  schedule:
    name: kubeflow-dashboard-schedule
    replicas: 1
    image: ccr.ccs.tencentyun.com/cube-studio/kubeflow-dashboard
    tag: 2024.03.01
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    resources: {}
    livenessProbe: {}
    readinessProbe: {}
  watch:
    name: kubeflow-watch
    replicas: 1
    image: ccr.ccs.tencentyun.com/cube-studio/kubeflow-dashboard
    tag: 2024.03.01
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    resources: {}
    livenessProbe: {}
    readinessProbe: {}
  worker:
    name: kubeflow-dashboard-worker
    replicas: 1
    image: ccr.ccs.tencentyun.com/cube-studio/kubeflow-dashboard
    tag: 2024.03.01
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    resources: {}
    livenessProbe: {}
    readinessProbe: {}

argo:
  enable: true
  namespace: kubeflow
  image: argoproj/workflow-controller
  tag: v3.4.3
  imagePullPolicy: IfNotPresent
  ## todo: args
  args: {}
  containerPort: 6060
  livenessProbe:
    failureThreshold: 3
    httpGet:
      path: /healthz
      port: 6060
    initialDelaySeconds: 90
    periodSeconds: 60
    timeoutSeconds: 30
  readinessProbe: {}
  minio:
    image: minio/minio
    tag: RELEASE.2023-04-20T17-56-55Z
    imagePullPolicy: IfNotPresent
    root: minio
    password: minio123
    persistence:
      enabled: true
      storageClass: ""
      size: 500Gi

kubeflow:

volcano:

istio:
  enable: true

monitor:
# todo

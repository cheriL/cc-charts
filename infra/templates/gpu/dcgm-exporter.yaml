{{ if .Values.gpu.nvidia.enable }}

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "dcgm-exporter"
  namespace: monitoring
  labels:
    app.kubernetes.io/name: "dcgm-exporter"
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: "dcgm-exporter"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "dcgm-exporter"
      name: "dcgm-exporter"
    spec:
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gpu
                operator: In
                values:
                - "true"
            - matchExpressions:
                - key: vgpu
                  operator: In
                  values:
                    - "true"
      containers:
      - image: "{{ .Values.gpu.nvidia.dcgmExporterImage }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: "DCGM_EXPORTER_LISTEN"
          value: ":9400"
        - name: "DCGM_EXPORTER_KUBERNETES"
          value: "true"
        name: "dcgm-exporter"
        ports:
        - name: "metrics"
          containerPort: 9400
        securityContext:
          privileged: true
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - name: "pod-gpu-resources"
          readOnly: true
          mountPath: "/var/lib/kubelet/pod-resources"
      volumes:
      - name: "pod-gpu-resources"
        hostPath:
          path: "/var/lib/kubelet/pod-resources"

---

kind: Service
apiVersion: v1
metadata:
  name: "dcgm-exporter"
  namespace: monitoring
  labels:
    app.kubernetes.io/name: "dcgm-exporter"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: '9400'
    prometheus.io/path: /metrics
spec:
  selector:
    app.kubernetes.io/name: "dcgm-exporter"
  ports:
  - name: "metrics"
    port: 9400

{{- end }}
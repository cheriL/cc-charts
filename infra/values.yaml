global:
  # -- Global Docker image registry.
  imageRegistry: "10.20.2.3:5000/cube-studio"
  # -- Global Docker registry secret names as an array.
  imagePullSecrets: []
  # -- Global storageClass for Persistent Volume(s).
  storageClass: "local-path"

host: "*"

mysql:
  # enable: true
  name: mysql
  namespace: infra
  image: mysql:8.0.32
  nodeSelector: {}
  tolerations: {}
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: mysql
    #           operator: In
    #           values:
    #           - "true"
  resources: {}
  initContainer:
    - name: remove-lost-found
      image: busybox:1.36.0
      imagePullPolicy: IfNotPresent
      command: ["rm", "-rf", "/var/lib/mysql/lost+found"]
      volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
  # service port
  port: 3306
  persistence:
    enabled: true
    storageClass: ""
    size: 1Gi

redis:
  namespace: infra
  image: redis:6.2.12
  nodeSelector: {} #redis: 'true'
  tolerations: {}
  affinity: {}
  resources:
    requests:
      cpu: 20m
      memory: 128Mi #512
  initContainer: {}
  port: 6379

istio:
  enable: true
  ingressgateway:
    resources:
      limits:
        cpu: 2000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
  istiod:
    resources: {}
      # requests:
      #   cpu: 500m
      #   memory: 2048Mi

gpu:
  nvidia:
    # todo: tolerations, affinity
    devicePluginImage: nvidia/k8s-device-plugin:v0.11.0-ubuntu20.04
    dcgmExporterImage: nvidia/dcgm-exporter:3.1.7-3.1.4-ubuntu20.04

cube:
  namespace: infra
  backend:
    name: kubeflow-dashboard
    replicas: 1
    image: kubeflow-dashboard:2024.03.01
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    resources: {}
    livenessProbe: {}
    readinessProbe: {}
  frontend:
    name: kubeflow-dashboard-frontend
    replicas: 1
    image: kubeflow-dashboard-frontend:2024.03.01
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    resources: {}
    livenessProbe: {}
    readinessProbe: {}
  schedule:
  watch:
  worker: